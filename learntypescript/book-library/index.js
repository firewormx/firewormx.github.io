var m=t=>{throw TypeError(t)};var h=(t,e,r)=>e.has(t)||m("Cannot "+r);var f=(t,e,r)=>(h(t,e,"read from private field"),r?r.call(t):e.get(t)),p=(t,e,r)=>e.has(t)?m("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,r),g=(t,e,r,n)=>(h(t,e,"write to private field"),n?n.call(t,r):e.set(t,r),r),u=(t,e,r)=>(h(t,e,"access private method"),r);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function r(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(s){if(s.ep)return;s.ep=!0;const o=r(s);fetch(s.href,o)}})();var i,c,a;class q{constructor(e){p(this,c);p(this,i);g(this,i,e)}get(e){return fetch(f(this,i)+e).then(r=>r.json())}post(e,r){return u(this,c,a).call(this,"POST",e,r)}put(e,r){return u(this,c,a).call(this,"PUT",e,r)}delete(e,r){return u(this,c,a).call(this,"DELETE",e,r)}}i=new WeakMap,c=new WeakSet,a=function(e,r,n){return fetch(f(this,i)+r,{method:e,headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(s=>s.json())};const S=document.querySelector("#books-list");function E(t){S.insertAdjacentHTML("beforeend",`<div class="book-card" data-genre="${t.details.genre}">
        <img
          src="${t.details.coverImage}"
          alt="${t.title}"
        />
        <div class="details">
          <h2>${t.title}</h2>
          <p class="author">by ${t.author}</p>
          <p class="genre">Genre: ${t.details.genre}</p>
          <p class="published-year">Published: ${t.details.publishedYear}</p>
          <p class="summary">${t.details.summary}</p>
        </div>
        <button class="hide hide-init">Hide</button> 
      </div>`);const e=document.querySelector(".hide-init");e.classList.remove("hide-init"),e.addEventListener("click",r=>{var n;(n=r.currentTarget.closest(".book-card"))==null||n.remove()})}function $(t){const e=document.querySelector("#genre-filter"),r=t.map(s=>s.details.genre);[...new Set(r)].forEach(s=>{e.insertAdjacentHTML("beforeend",`<option value="${s}">${s}</option>`)}),e.addEventListener("change",s=>{const o=s.currentTarget.value;document.querySelectorAll(".book-card").forEach(d=>{const L=d.dataset.genre;o===""||L===o?d.classList.remove("hidden"):d.classList.add("hidden")})})}const v=new q("https://firewormx.github.io/learntypescript/book-library/src/");v.get("bookLibrary.json").then(t=>{t.books&&(t.books.forEach(e=>{E(e)}),$(t.books))});const T=document.querySelector("#request-book-form"),y=document.querySelector("#book-title"),b=document.querySelector("#book-author"),k=document.querySelector("#message");T.addEventListener("submit",t=>{t.preventDefault();const e={title:y.value,author:b.value};v.post("bookLibrary.json",e).then(()=>{k.textContent="Thank you for suggesting a new book!",y.value="",b.value=""})});
